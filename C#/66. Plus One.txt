using System;
using System.Collections.Generic;
using System.Linq;
using System.Numerics;
using System.Text;
using System.Threading.Tasks;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] digits = new int[] { 9,9,9};
            Solution solution = new Solution();

            //Console.WriteLine(BigInteger.Parse(string.Join(string.Empty, digits))+1);

            int[] result = solution.PlusOne(digits);
            foreach (int digit in result)
            {
                Console.WriteLine(digit);
            }

            Console.ReadKey();

        }
        public class Solution
        {
            public int[] PlusOne(int[] digits)
            {
                int pointer = digits.Length-1;//方便用recursive

                return checknextdigit(digits, pointer);               

                
            }


            public int[] checknextdigit(int[] digits,int pointer)//傳進近來還是要包含原本的digits(才能讀到原本的值和size)和pointer-1
            {
                if (digits[pointer] == 9)//尾數是9要處理進位
                {
                    if (pointer - 1 < 0)//已經進到最大位
                    {
                        digits[pointer] = 0;//尾數必定變0
                        int[] temps = new int[digits.Length +1];//int[]的關係所以新找一片+1的記憶體來用
                        temps[0] = 1;
                        digits.CopyTo(temps, 1);//把原本的array接再[0]之後，CopyTo(int[],index)
                        return temps;
                    }
                    else
                    {
                        digits[pointer] = 0;//尾數必定變0
                        return checknextdigit(digits, pointer -1);//處理進位(進位可能還遇到9)
                    }
                }
                else
                {
                    digits[pointer] = digits[pointer] + 1;//沒進位就簡單的尾數+1
                    return digits;
                }
            }
        }
        //比較暴力就把int[]組起來再+1，再解開吧
        //其他
        //這個是記錄下有沒有進位，方法一樣但寫法好像比我還新手，看來這個厲害的人也年輕過
        //https://leetcode.com/problems/plus-one/discuss/24165/C-Solution
        //這有點暴力解又很簡潔XD，先組成字串再轉成數字+1再轉回字串用linkQ一個個轉成數字再轉成array
        //https://leetcode.com/problems/plus-one/discuss/1537673/C-One-Line
        //這個很好玩他是用stack把和q把進位傳下去，如果最後要加一位就stack最後多push一個1，不過我發現他們都用取餘數的方式來進位不向我都直接設0(原本位數)和1(進位),可能和10進位2進位有關的習慣吧
        //https://leetcode.com/problems/plus-one/discuss/855500/C-with-Stack

    }
}
