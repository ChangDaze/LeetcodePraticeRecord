using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Security.Policy;
using System.Security.Cryptography;
using System.Data.SqlTypes;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] nums1 = new int[] { 1, 2, 3 };
            int[] nums2 = new int[] { 2, 4, 6 };
            Solution solution = new Solution();
            var result = solution.FindDifference(nums1, nums2);
            Console.WriteLine(result);
            Console.ReadKey();

        }
        //public class Solution
        //{
        //    public IList<IList<int>> FindDifference(int[] nums1, int[] nums2)
        //    {
        //        var result1 = nums1.Distinct().ToList();
        //        var result2 = nums2.Distinct().ToList();

        //        for (int i = 0; i < result2.Count; i++)
        //        {
        //            if (result1.Contains(result2[i]))
        //            {
        //                result1.Remove(result2[i]);
        //                result2.Remove(result2[i]);
        //                i--;
        //            }
        //        }

        //        return new List<IList<int>>() { result1, result2 };
        //    }
        //}
        //想不出好辦法，只好硬剛，速度很慢
        //其他
        //這位C++也是硬剛，vote還很多ㄟ
        //https://leetcode.com/problems/find-the-difference-of-two-arrays/solutions/3480249/easy-solution-c-explained-using-sets/
        //這位C++是直接用語法的set_difference處理
        //https://leetcode.com/problems/find-the-difference-of-two-arrays/solutions/1886953/set-difference/
        //這位python也是直接用語法list(s1 - s2), list(s2 - s1)....
        //https://leetcode.com/problems/find-the-difference-of-two-arrays/solutions/1887190/python-set-difference/
        //這樣看來C#應該也有語法喔
        //確實有，except
        //https://leetcode.com/problems/find-the-difference-of-two-arrays/solutions/3479776/c-1-liner-except/?q=C%23&orderBy=most_relevant
        //C#排名比較前面的都是用hashsetㄟ，頂多再用except，這樣看來hashset比distinct快?

        //2023.0723
        public class Solution
        {
            public IList<IList<int>> FindDifference(int[] nums1, int[] nums2)
            {
                HashSet<int> result1 = nums1.ToHashSet();
                List<int> result2 = new List<int>();
                int temp = -1001;

                Array.Sort(nums2);//不整理好不能用下面的方法

                for(int i = 0;i< nums2.Length;i++)
                {
                    if (nums2[i] == temp)
                        continue;

                    if (!result1.Contains(nums2[i]))
                        result2.Add(nums2[i]);
                    else
                        result1.Remove(nums2[i]);

                    temp = nums2[i];
                }

                return new List<IList<int>>() { result1.ToList(),result2};
            }
        }
    }
}
