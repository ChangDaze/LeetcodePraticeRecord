using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Diagnostics;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = 19;
            Solution solution = new Solution();
            var result = solution.IsHappy(n);
            Console.WriteLine(result);
            Console.ReadKey();

        }


        public class Solution
        {
            public bool IsHappy(int n)
            {
                //這題除非解題者是數學家，不然題目真的有點白痴，提示太少，大家都瞎做
                //這題就兩個出路 n = 1(n=1000再做一次也是n=1)或是n重複出現(代表無限循環)
                //但題目沒說一定會重複出現，所以我才說題目提示太少，也些人乾脆循環超過20次就直接false了也對..
                //不過有人敢用遞迴也是頗猛
                HashSet<int> visited = new HashSet<int>();
                visited.Add(n);
                int temp = 0;
                int newNumber = 0;
                while (n != 1)
                {
                    newNumber = 0;
                    while(n>0)
                    {
                        temp = n % 10;
                        newNumber += temp * temp;
                        n /= 10;
                    }
                    n = newNumber;
                    if (visited.Contains(n))
                        return false;
                    visited.Add(n);                    
                }
                return true;
		//忘記用了，但記得去看一下two pointer用法
		//https://leetcode.com/problems/happy-number/solutions/718534/kotlin-two-solutions/?q=two+po&orderBy=most_relevant
            }
        }
    }
}
