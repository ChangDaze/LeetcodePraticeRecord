using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Security.Policy;
using System.Security.Cryptography;
using System.Data.SqlTypes;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] nums = new int[]{ 4, 6, 5, 9, 3, 7};
            int[] l = new int[]{ 0,0,2};
            int[] r = new int[]{ 2,3,5};
            Solution solution = new Solution();
            var result = solution.CheckArithmeticSubarrays(nums,l,r);
            Console.WriteLine(result);
            Console.ReadKey();
        }
        public class Solution
        {
            public IList<bool> CheckArithmeticSubarrays(int[] nums, int[] l, int[] r)
            {
                List<bool> result = new List<bool>();

                for(int i = 0; i<l.Length; i++)
                {
                    var subArray = nums.Skip(l[i]).Take(r[i] - l[i] + 1 ).ToArray();
                    Array.Sort(subArray);
                    bool flag = true;
                    int delta = subArray[1] - subArray[0];
                    for(int j = 2; j < subArray.Length; j++)
                    {
                        if (subArray[j] - subArray[j - 1] != delta)
                        {
                            flag = false;
                            break;
                        }
                    }

                    if(flag) 
                        result.Add(true);
                    else 
                        result.Add(false);
                }

                return result;
            }
        }
        //就單純暴力解，我是有想到另一種暴力解啦，應該也能試試，就帶著index整個nums sort,然後每輪query走一遍nums，把index照順序放入事先算好長度的array，會比較快?好像也還好
        //這種應該都有比暴力解更好的方法
    }
}
