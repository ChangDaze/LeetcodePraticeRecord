using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Security.Policy;
using System.Security.Cryptography;
using System.Data.SqlTypes;
using System.Reflection;
using System.Security.AccessControl;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            string s = "233";
            int k = 3;
            Solution solution = new Solution();
            var result = solution.DigitSum(s,k);
            Console.WriteLine(result);
            Console.ReadKey();
        }

        public class Solution
        {
            public string DigitSum(string s, int k)
            {
                List<int> before = new List<int>();
                List<int> after = new List<int>();
                int temp = 0;
                int count = 0;

                //char 變 int
                if(s.Length>k)//記得看長度的都要用k來處理
                {
                    for (int i = 0; i < s.Length; i++)
                    {
                        temp += (s[i] - '0');
                        count++;
                        if (count >= k || i == s.Length - 1)//s.Length - 1是因為到底了也要做
                        {
                            int index = after.Count();
                            do//總和是0也要先加入，所以用 do while
                            {
                                after.Insert(index, temp % 10);//插入在相同位置，低位數的數字自然會被往後推
                                temp /= 10;
                            } while (temp > 0);
                            count = 0;
                        }
                    }
                }
                else//有些預先長度就不足也要另外處理
                {
                    for (int i = 0; i < s.Length; i++)                    
                        after.Add(s[i] - '0');                    
                }
                

                //int 變 int
                while(after.Count() > k)
                {
                    before = after.ToList();
                    after.Clear();

                    for (int i = 0; i < before.Count(); i++)
                    {
                        temp += before[i];
                        count++;
                        if (count >= k || i == before.Count() - 1)
                        {
                            int index = after.Count();
                            do
                            {
                                after.Insert(index, temp % 10);
                                temp /= 10;
                            } while (temp > 0);
                            count = 0;
                        }
                    }
                }

                //int 變 string
                string result = "";
                foreach(int nums in after)
                    result += nums.ToString(); 

                return result;
            }
        }
        //可以單純先把字串變list<int>就可以單純用int 變 int的那段，不用char 變 int，不過寫可以少做一輪，所以就都寫出來了，速度還行
    }
}
