using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Security.Policy;
using System.Security.Cryptography;
using System.Data.SqlTypes;
using System.Reflection;
using System.Security.AccessControl;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] nums = new int[] {3,6,1,2,5};
            int k = 2;
            Solution solution = new Solution();
            var result = solution.PartitionArray(nums,k);
            Console.WriteLine(result);
            Console.ReadKey();
        }
        #region time limit
        //public class Solution
        //{
        //    public int PartitionArray(int[] nums, int k)
        //    {
        //        Array.Sort(nums);

        //        int result = 0;
        //        int left = 0;
        //        int right = nums.Length - 1;

        //        while(left < nums.Length)
        //        {
        //            if (nums[right] - nums[left] <= k)
        //            {
        //                result++;
        //                left = right + 1;
        //                right = nums.Length - 1;                        
        //            }
        //            else
        //            {
        //                right--;
        //            }
        //        }

        //        return result;
        //    }
        //}
        #endregion

        public class Solution
        {
            public int PartitionArray(int[] nums, int k)
            {
                Array.Sort(nums);

                int result = 0;
                int pointer = 0;

                while (pointer < nums.Length)
                {
                    int standard = nums[pointer] + k;
                    while (nums[pointer] <= standard)
                    {
                        pointer++;
                        if(pointer >= nums.Length)
                            break;
                    }

                    result++;                        
                }

                return result;
            }
        }
    }
}
