using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            var root = new TreeNode(1, new TreeNode(2, new TreeNode(4)), new TreeNode(3));
            Solution solution = new Solution();
            var result = solution.Tree2str(root);
            Console.WriteLine(result);
            Console.ReadKey();

        }


        public class TreeNode
        {
            public int val;
            public TreeNode left;
            public TreeNode right;
            public TreeNode(int val = 0, TreeNode left = null, TreeNode right = null)
            {
                this.val = val;
                this.left = left;
                this.right = right;
            }
        }


        public class Solution
        {
            String result = "";
            public string Tree2str(TreeNode root)
            {
                if(root == null) return result;
                Recurive(root);
                return result;
            }

            public void Recurive(TreeNode node)
            {
                result += node.val.ToString();                    
                if (node.left != null || node.right != null)//因為只要左或右有，左邊的()一定要出現(右邊就不用)，避免mapping錯誤
                {
                    result += '(';
                    if (node.left != null) Recurive(node.left);
                    result += ')';
                    if(node.right != null)//我覺得寫成這樣十分白癡，速度也是只有8%，可能要好好參考一下別人的
                    {
                        result += '(';//這是每個節點都要()起來，不是左右共用一個
                        Recurive(node.right);
                        result += ')';
                    }                    
                }
                return;
            }
        }


    }
}
