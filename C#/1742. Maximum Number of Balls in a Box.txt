using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Security.Policy;


namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int lowLimit = 1, highLimit = 10;
            Solution solution = new Solution();
            var result = solution.CountBalls(lowLimit, highLimit);
            Console.WriteLine(result);
            Console.ReadKey();

        }
        public class Solution
        {
            public int CountBalls(int lowLimit, int highLimit)
            {
                int[] record = new int[highLimit.ToString().Length * 9 + 1];

                for(int i = lowLimit; i <= highLimit; i++)                
                    record[CountDigit(i)] ++;

                int max = -1;
                foreach(int num in record)
                {
                    if (num > max)
                        max = num;
                }
                return max;
            }

            private int CountDigit(int num)
            {
                int result = 0;
                while(num>0)
                {
                    result += num % 10;
                    num = num / 10;
                }
                return result;
            }
        }
        //因為想不到好解法，所以暴力解
        //其他
        //1.第一種方法一樣是暴力解
        //2.第二種方法是我一開始享用但沒想通的，就是數學規律，基本上每個數字的box id 是+1+1遞增，當進位(尾數為0)，id-=9，2，也可能遇到進位百位，同理while (digits % 10 == 0){id -= 9;digits /= 10;}
        //多想想應該當初能想到，不過思維要跳動一些
        //https://leetcode.com/problems/maximum-number-of-balls-in-a-box/solutions/1042954/java-python-3-two-codes-w-brief-explanation-and-analysis/
        //暴力解
        //https://leetcode.com/problems/maximum-number-of-balls-in-a-box/solutions/1042947/c-counts/
        //這也是暴力解，不過存的方式是用hash map
        //https://leetcode.com/problems/maximum-number-of-balls-in-a-box/solutions/1043101/java-straightforward-solution/
    }
}
