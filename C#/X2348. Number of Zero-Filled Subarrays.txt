using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Diagnostics;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] nums = new int[] { 1, 3, 0, 0, 2, 0, 0, 4 };
            Solution solution = new Solution();
            var result = solution.ZeroFilledSubarray(nums);
            Console.WriteLine(result);
            Console.ReadKey();

        }

        public class Solution
        {
            public long ZeroFilledSubarray(int[] nums)
            {
                long result = 0;
                int  temp = -1;
                for(int i = 0;i<nums.Length ;i++)
                {
                    if (nums[i] == 0 && temp == -1)
                        temp = 1;
                    else if(nums[i] == 0 && temp != -1)
                        temp += 1;
                    else if(nums[i] != 0 && temp != -1)
                    {                        
                        result += (long)(1 + (double)temp) * temp / 2;
                        temp = -1;//要做完才能重置temp
                    }                                        
                }

                if (nums[nums.Length-1] == 0)
                    result += (long)(1 + (double)temp) * temp / 2;

                return result;
                //這題雖是medium但意外的簡單，就是找出連續的0，然後(上底+下底)*高/2，因為有乘除所以要注意位數問題
                //然後他的組合好像就只是P的x(總數)取y(1~x)，所以才用梯形公式(等比)
            }
        }
    }
}
