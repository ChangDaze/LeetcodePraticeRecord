using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            var root = new TreeNode(1, new TreeNode(2), new TreeNode(3));
            Solution solution = new Solution();
            var result = solution.FindTilt(root);
            Console.WriteLine(result);
            Console.ReadKey();

        }


        public class TreeNode
        {
            public int val;
            public TreeNode left;
            public TreeNode right;
            public TreeNode(int val = 0, TreeNode left = null, TreeNode right = null)
            {
                this.val = val;
                this.left = left;
                this.right = right;
            }
        }


        public class Solution
        {
            public int result = 0;
            public int FindTilt(TreeNode root)
            {
                Recurive(root);//最後的root不用接值
                return result;
            }

            public int Recurive(TreeNode node)
            {
                if(node == null) return 0;//leave就是0
                int sumLeft = Recurive(node.left);
                int sumRight = Recurive(node.right);
                result += Math.Abs(sumLeft - sumRight);//紀錄左右sub差距
                return sumLeft + sumRight + node.val;//到root時加上"自己的val"當作上層sub的值方便算sub差
                //痾，有點沒實感，基本上就是照著postorder走
            }
        }


    }
}
