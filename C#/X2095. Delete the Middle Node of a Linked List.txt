using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
           ListNode linkList= new ListNode(1,new ListNode(3,new ListNode(4,new ListNode(7,new ListNode(1,new ListNode(2,new ListNode(6)))))));            
           var solution = new Solution();       
           var result = solution.DeleteMiddle(linkList);
           Console.WriteLine(result);
           Console.ReadKey();

        }

        public class ListNode
        {
            public int val;
            public ListNode next;
            public ListNode(int val = 0, ListNode next = null)
            {
                this.val = val;
                this.next = next;
            }
        }

        public class Solution
        {
            public ListNode DeleteMiddle(ListNode head)
            {
                //這題題目的middle當是雙數時是要靠後，所以我們two step結束的步數就是one step到中點的步數(因為linklist不能回頭，所以while是 two step先做)
                //也幸好 hint提供two step提示
                if (head.next == null) return null;//當長度只有1時不能跳

                ListNode oneStep = head;
                ListNode twoStep = head;

                while(twoStep.next != null)//當長度剛好結束會從這跳
                {
                    //先做兩步的
                    for(int i = 0; i < 2; i++)
                    {
                        twoStep= twoStep.next;
                        if (twoStep.next is null) break;//two step可能中途結束所以要檢查避免錯誤
                    }

                    if (twoStep.next is null) break;//從for迴圈 null 出來要再跳一次，避免oneStep移動

                    //再做一步的(因為linklist不能回頭，所以在到達middle前就要停下)
                    oneStep = oneStep.next;
                }

                oneStep.next = oneStep.next.next;//跳過中間點

                return head;
            }
        }       

    }
}
