using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace testconsole2013
{

    class Program
    {
        static void Main(string[] args)
        {
            int[] nums = { 1, 7, 3, 6, 5, 6 };
            Solution solution = new Solution();
            int result = solution.PivotIndex(nums);

            Console.WriteLine(result);
            Console.ReadKey();

            //比較精準的解法，不過方法一樣
            //https://leetcode.com/problems/find-pivot-index/discuss/109271/C-Solution.

        }


    }

    //public class Solution
    //{
        //從右邊往左比，如果遇到0,0這種會取靠右的index
        //public int PivotIndex(int[] nums)
        //{
        //    int resultindex = nums.Length;
        //    int sumleft = 0;
        //    int sumright= 0;
        //    sumleft = nums.Sum() - nums[nums.Length - 1];
        //    if (sumleft == sumright)
        //    {
        //        resultindex = nums.Length;
        //        return resultindex;
        //    }

        //    resultindex = -1;

        //    for (int i = nums.Length - 2; i >= 0; i--)
        //    {
        //        sumleft = sumleft - nums[i];
        //        sumright = sumright + nums[i + 1];

        //        if (sumleft == sumright)
        //        {
        //            resultindex = i;
        //            break;
        //        }
        //    }


        //    //Console.WriteLine(sumleft);
        //    return resultindex;
        //}

        //public int PivotIndex(int[] nums)
        //{
        //    int resultindex = nums.Length;
        //    int sumleft = 0;
        //    int sumright = 0;
        //    sumright = nums.Sum() - nums[0];
        //    if (sumleft == sumright)
        //    {
        //        resultindex = 0;
        //        return resultindex;
        //    }

        //    resultindex = -1;

        //    for (int i = 1; i < nums.Length; i++)
        //    {
        //        sumleft = sumleft + nums[i - 1];
        //        sumright = sumright - nums[i];

        //        if (sumleft == sumright)
        //        {
        //            resultindex = i;
        //            break;
        //        }
        //    }


        //    //Console.WriteLine(sumright);
        //    return resultindex;
        //}


    //}

    //2023.0722
    public class Solution
    {
        public int PivotIndex(int[] nums)
        {
            int[] sumLeft = new int[nums.Length];
            int[] sumRight = new int[nums.Length];

            for(int i = 1;i< nums.Length;i++)
            {
                sumLeft[i] = sumLeft[i-1] + nums[i-1];
                sumRight[nums.Length-1-i] = sumRight[nums.Length-1-i+1] + nums[nums.Length - 1 - i+1];
            }

            int result = -1;

            for(int i = 0;i<nums.Length;i++)
            {
                if (sumLeft[i] == sumRight[i])
                {
                    result = i;
                    break;
                }
                    
            }

            return result;
        }
    }


}
