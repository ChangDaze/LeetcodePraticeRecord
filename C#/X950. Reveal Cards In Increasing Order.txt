using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Security.Policy;
using System.Security.Cryptography;
using System.Data.SqlTypes;
using System.Reflection;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] piles = new int[] { 17, 13, 11, 2, 3, 5, 7 };
            Solution solution = new Solution();
            var result = solution.DeckRevealedIncreasing(piles);
            Console.WriteLine(result);
            Console.ReadKey();
        }

        public class Solution
        {
            public int[] DeckRevealedIncreasing(int[] deck)
            {
                Array.Sort(deck);//先排序

                int[] result = new int[deck.Length];
                Queue<int> queue = new Queue<int>();
                for (int i = 0;i<deck.Length;i++)//這是index
                    queue.Enqueue(i);
                bool flag = false;//確認目前要進行步驟，false : step1、 true : step2
                int pointer = 0;//目前該哪個放入

                while(queue.Count> 0)//邊確認index會被執行的順序邊放入排序好的值
                {
                    if (flag)
                    {
                        queue.Enqueue(queue.Dequeue());//放回底部
                        flag = false;//步驟更換
                    }
                    else
                    {
                        result[queue.Dequeue()] = deck[pointer++];//翻牌
                        flag= true;
                    }                                            
                }

                return result;               

                
            }
        }
        //基本上就是模擬題目情境兩步驟輪回到結束，但應該還是有比較好的方法?
    }
}
