using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int[][] nums1 = new int[3][] { new int[] { 2,4 }, new int[] { 3,6 }, new int[] { 5,5} };
            int[][] nums2 = new int[2][] { new int[] { 1, 3 }, new int[] { 4,3 }};
            Solution solution = new Solution();
            var result = solution.MergeArrays(nums1, nums2);
            Console.WriteLine(result);
            Console.ReadKey();

        }


        public class Solution
        {
            public int[][] MergeArrays(int[][] nums1, int[][] nums2)
            {
                List<int[]> record = new List<int[]>();
                int x = 0;
                int y =0;
                //有個比較大的前提就是nums1和nums2是id ascending的
                while (x < nums1.Length && y <nums2.Length)//一邊結束後就不交錯比了，因為id比大小時會出錯，交給後面迴圈拼上就好
                {
                    if (nums1[x][0] < nums2[y][0])
                    {
                        record.Add(new int[] { nums1[x][0], nums1[x][1] });
                        x += 1;
                    }
                    else if(nums1[x][0] > nums2[y][0] )
                    {
                        record.Add(new int[] { nums2[y][0], nums2[y][1] });
                        y += 1;
                    }
                    else
                    {
                        record.Add(new int[] { nums1[x][0], nums1[x][1]+ nums2[y][1] });
                        x += 1;y += 1;
                    }                        
                }

                if(x < nums1.Length)
                    for(int i = x; i < nums1.Length; i++)
                        record.Add(new int[] { nums1[i][0], nums1[i][1] });
                else if(y<nums2.Length)
                    for (int i = y; i < nums2.Length; i++)
                        record.Add(new int[] { nums2[i][0], nums2[i][1] });

                return record.ToArray();
            }
        }
    }
}
