using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            var root = new TreeNode(1, new TreeNode(2, new TreeNode(3), new TreeNode(4)), new TreeNode(2, new TreeNode(4), new TreeNode(3)));
            Solution solution = new Solution();
            var result = solution.FindMode(root);
            Console.WriteLine(result);
            Console.ReadKey();

        }


        public class TreeNode
        {
            public int val;
            public TreeNode left;
            public TreeNode right;
            public TreeNode(int val = 0, TreeNode left = null, TreeNode right = null)
            {
                this.val = val;
                this.left = left;
                this.right = right;
            }
        }


        public class Solution
        {
            Dictionary<int,int> record = new Dictionary<int,int>();
            public int[] FindMode(TreeNode root)
            {
                Recurive(root);
                List<int> result = new List<int>();
                int max = 0;
                //可以看看別人有沒有好的計數方法
                //Mode也是眾數
                foreach(int key in record.Keys)
                {
                    if (record[key] > max)
                    {
                        max = record[key];
                        result.Clear();
                        result.Add(key);
                    }
                    else if (record[key] == max)
                        result.Add(key);                        
                }
                return result.ToArray();
            }

            public void Recurive(TreeNode node)
            {
                if(node==null) return;
                Recurive(node.left);
                Recurive(node.right);
                if (record.Keys.Contains(node.val))
                    record[node.val]++;
                else
                    record[node.val] = 1;
                return;
            }
        }

    }
}
