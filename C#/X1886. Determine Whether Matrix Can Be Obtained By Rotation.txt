using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            var mat = new int[][] { new int[] { 0, 1 }, new int[] { 1, 1 } };
            var target = new int[][] { new int[] { 1,0 }, new int[] { 0, 1 } };
            Solution solution = new Solution();
            var result = solution.FindRotation(mat,target);
            Console.WriteLine(result);
            Console.ReadKey();

        }

        public class Solution
        {
            public bool FindRotation(int[][] mat, int[][] target)
            {
                int indexLen = mat.Length-1;//感覺會快些@@
                bool method1 = true;//90度
                bool method2 = true;//180度
                bool method3 = true;//270度
                bool method4 = true;//360度
                for (int i = 0; i < mat.Length;i++)
                    for(int j = 0; j < mat[0].Length; j++)
                    {
                        if (mat[i][j] != target[j][indexLen-i])//每次90度都做這個轉換(row = col，col = len-row)
                            method1 = false;
                        if (mat[i][j] != target[indexLen - i][indexLen - j])//第一個方法做90度轉換
                            method2 = false;
                        if (mat[i][j] != target[indexLen - j][i])//len-(len-i)=i
                            method3 = false;
                        if (mat[i][j] != target[i][j])
                            method4 = false;
                    }
                        
                if(method1||method2|| method3|| method4)//|和||好像就跟&和&&一樣ㄟ
                    return true;

                return false;
            }
            //可能有方法中斷if else，不過感覺差異不大最多還是走完O(n)
        }
    }
}
