using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            var root = new TreeNode(3, new TreeNode(9), new TreeNode(20, new TreeNode(15), new TreeNode(7)));
            Solution solution = new Solution();
            var result = solution.MinDepth(root);
            Console.WriteLine(result);
            Console.ReadKey();

        }


        public class TreeNode
        {
            public int val;
            public TreeNode left;
            public TreeNode right;
            public TreeNode(int val = 0, TreeNode left = null, TreeNode right = null)
            {
                this.val = val;
                this.left = left;
                this.right = right;
            }
        }


        public class Solution
        {
            int min = Int32.MaxValue;
            public int MinDepth(TreeNode root)
            {
                if (root == null) return 0;
                Recurive(root, 1);
                return min;
                //這題可能是很少人寫，意外的簡單?
            }

            public void Recurive(TreeNode node ,int depth)
            {
                if (node == null || depth >= min) return;//當深度超過時就能提前返回了
                Recurive(node.left, depth+1);
                Recurive(node.right, depth+1);
                if(node.left == null && node.right == null)
                    if(depth<min) min = depth;
                return;
            }
        }


    }
}
