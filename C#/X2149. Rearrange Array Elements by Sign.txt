using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] nums = new int[] { 28, -41, 22, -8, -37, 46, 35, -9, 18, -6, 19, -26, -37, -10, -9, 15, 14, 31 };
            Solution solution = new Solution();
            var result = solution.RearrangeArray(nums);
            Console.WriteLine(result);
            Console.ReadKey();

        }

        public class Solution
        {
            public int[] RearrangeArray(int[] nums)
            {
                int i = 0;
                int j = 1;

                int[] result = new int[nums.Length];

                foreach(int num in nums)
                {
                    //因為有保證 positive 和 negative 且量一樣多，所以簡單做就好
                    if (num > 0)
                    {
                        result[i] = num;
                        i += 2;
                        continue;
                    }

                    result[j] = num;
                    j += 2;
                }

                return result;//用num本身當result不額外用空間的話可能要很複雜?因為要維持順序代表每次換位置都要把之後的順序往後推?
            }

        }
    }
}
