using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Data.Common;
using System.Xml.Linq;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;

namespace testconsole2013
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] target = new int[] { 1, 2, 3, 4 };
            int[] arr = new int[] { 2, 4, 1, 3 };
            Solution solution = new Solution();
            var result = solution.CanBeEqual(target, arr);
            Console.WriteLine(result);
            Console.ReadKey();

        }

        public class Solution
        {
            public bool CanBeEqual(int[] target, int[] arr)
            {
                Dictionary<int, int> record = new Dictionary<int, int>() { };
                //就是target和arr裡面element數量一致就行
                //題目描述的很難，但沒限制步數，所以只要element相同都可透過倆倆互換來達成
                //題目還有另一個解法，就是sort target 和 arr，然後直接一個個比兩者是否相同，我只是剛好想用hashtable而已
                for(int i = 0;i<target.Length ;i++)
                {
                    if (record.ContainsKey(target[i]))
                        record[target[i]] += 1;
                    else
                        record[target[i]] = 1;

                    if (record.ContainsKey(arr[i]))
                        record[arr[i]] -= 1;
                    else
                        record[arr[i]] = -1;
                }

                foreach(int key in record.Keys)
                    if (record[key] != 0)
                        return false;

                return true;
            }
        }
    }
}
