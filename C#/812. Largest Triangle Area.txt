using System.Numerics;
using System.Text;

namespace LeetcodeConsole
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[][] points = new int[][] { 
                new int[] {0,0 },
                new int[] {0,2 },
                new int[] {2,0 },
                new int[] {0,1 },
                new int[] { 1, 0 }
            };

            Solution solution = new Solution();
            Console.WriteLine(solution.LargestTriangleArea(points));
            Console.ReadKey();
        }

        //2024.0310.1313
        public class Solution
        {
            public double LargestTriangleArea(int[][] points)
            {
                double max = 0;
                for(int i = 0; i < points.Length-2; i++)
                {
                    for (int j = 1; j < points.Length - 1; j++)
                    {
                        for (int k = 2; k < points.Length; k++)
                        {
                            double area = Math.Abs(points[i][0] * (points[j][1] - points[k][1]) + points[j][0] * (points[k][1] - points[i][1]) + points[k][0] * (points[i][1] - points[j][1])) / 2.0;
                            if (area > max) 
                                max = area;
                        }
                    }
                }
                return max;
            }
        }
        //概念大概是窮舉組合+數學公式算面積比大小，其他人基本應該也都這樣，這應該是向量算面積的公式，因為海龍公式算出來怪怪的，除非回去讀數學?不然應該不用特別考慮比較好的解法
        //基本上抄這位JAVA的
        //https://leetcode.com/problems/largest-triangle-area/solutions/124010/simple-java-easy-understand/
    }
}