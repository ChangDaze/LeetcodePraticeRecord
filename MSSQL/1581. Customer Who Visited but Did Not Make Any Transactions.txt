Create table #Visits(visit_id int, customer_id int)
Create table #Transactions(transaction_id int, visit_id int, amount int)
insert into #Visits (visit_id, customer_id) values ('1', '23')
insert into #Visits (visit_id, customer_id) values ('2', '9')
insert into #Visits (visit_id, customer_id) values ('4', '30')
insert into #Visits (visit_id, customer_id) values ('5', '54')
insert into #Visits (visit_id, customer_id) values ('6', '96')
insert into #Visits (visit_id, customer_id) values ('7', '54')
insert into #Visits (visit_id, customer_id) values ('8', '54')
insert into #Transactions (transaction_id, visit_id, amount) values ('2', '5', '310')
insert into #Transactions (transaction_id, visit_id, amount) values ('3', '5', '300')
insert into #Transactions (transaction_id, visit_id, amount) values ('9', '5', '200')
insert into #Transactions (transaction_id, visit_id, amount) values ('12', '1', '910')
insert into #Transactions (transaction_id, visit_id, amount) values ('13', '2', '970')

select * from #Visits 
select * from #Transactions

--基本上就是兩者合併找出visit後卻沒交易的visit(trans is null)
select customer_id,count(1) count_no_trans from #Transactions A
full join #Visits B
on A.visit_id = B.visit_id
where A.transaction_id is null
group by customer_id

--速度很慢，不過要注意用Left join可能會更快也更準? -> 好像並沒有
--其他
--這個人提供3種方法
--1. Left join 基本跟我一樣
--2. visit_id not in Transactions，不用join -> 意外速度也快一點
--3. visit_id not exist Transactions，不用join -> 意外速度最快
--可能not in、not exist看場合用確實效能較好?
--https://leetcode.com/problems/customer-who-visited-but-did-not-make-any-transactions/solutions/2533481/3-different-solutions-join-not-in-not-exists/
--這是MySQL，不過也是用not in
--https://leetcode.com/problems/customer-who-visited-but-did-not-make-any-transactions/solutions/2563626/mysql-solution-fast-clean-and-easy-no-join/
--這方法跟我相同，但是left join，但速度也是很慢
--https://leetcode.com/problems/customer-who-visited-but-did-not-make-any-transactions/solutions/3303932/sql-server-clean-easy/

drop table #Visits
drop table #Transactions
